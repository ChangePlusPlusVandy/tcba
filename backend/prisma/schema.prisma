// Prisma schema for TCBA coalition management platform
// Run npx prisma generate after changes to update types and regenerate client and model

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Organization permission levels for coalition platform
enum OrganizationRole {
  SUPER_ADMIN // Full system access (TCBA staff)
  ADMIN // Coalition management access
  MEMBER // Standard nonprofit member
}

// Organization account states
enum OrganizationStatus {
  ACTIVE // Can use platform
  INACTIVE // Temporarily disabled
  PENDING // Waiting for setup completion
  SUSPENDED // Admin blocked access
}

// Tennessee regions for member organizations
enum TennesseeRegion {
  EAST
  MIDDLE
  WEST
}

// Organization size categories for dues calculation
enum OrganizationSize {
  SMALL
  MEDIUM
  LARGE
  EXTRA_LARGE
}

model Announcements {
  id              String   @id @default(cuid())
  title           String
  content         String   @db.Text
  publishedDate   DateTime?
  isPublished     Boolean  @default(false)
  attachmentUrls  String[]
  tags            String[]
  createdByAdminId String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("announcements")
}

model Organization {
  id                        String             @id @default(cuid())
  clerkId                   String             @unique
  name                      String             @unique
  email                     String             @unique
  description               String?
  website                   String?
  address                   String?
  city                      String?
  state                     String?
  zipCode                   String?
  latitude                  Float?
  longitude                 Float?
  primaryContactName        String
  primaryContactEmail       String
  primaryContactPhone       String
  secondaryContactName      String?
  secondaryContactEmail     String?
  region                    TennesseeRegion?
  organizationType          String?
  membershipActive          Boolean            @default(false)
  membershipDate            DateTime?
  membershipRenewalDate     DateTime?
  organizationSize          OrganizationSize?
  role                      OrganizationRole   @default(MEMBER)
  status                    OrganizationStatus @default(PENDING)
  tags                      String[]

  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @updatedAt

  surveyResponses           SurveyResponse[]

  @@map("organizations")
}

model SurveyResponse {
  id             String       @id @default(cuid())
  responses      Json?
  submittedDate  DateTime?
  surveyId       String
  organizationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  survey         Survey       @relation(fields: [surveyId], references: [id], onDelete: Cascade)
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)

  @@unique([surveyId, organizationId])
  @@map("surveyResponse")
}

model Survey {
  id                String             @id @default(cuid())
  title             String
  description       String?
  questions         Json?
  createdDate       DateTime           @default(now())
  dueDate           DateTime?
  isActive          Boolean
  isPublished       Boolean

  surveyResponses   SurveyResponse[]

  @@map("survey")
}
// Model for admins
model AdminUser {
    id              String             @id @default(cuid())
    clerkId         String             @unique
    email           String             
    name            String
    isSuperAdmin    Boolean            @default(false)
    isActive        Boolean
    
    @@map("AdminUser")
}

model EmailSubscription {
  id                  String    @id @default(cuid())
  email               String    @unique
  name                String?
  subscriptionTypes   String[]
  isActive            Boolean   @default(true)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@map("emailSubscriptions")
}
